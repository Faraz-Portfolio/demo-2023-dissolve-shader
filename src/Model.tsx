/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: StrykerDoesAnimation (https://sketchfab.com/strykerdoesgames)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/dancing-stormtrooper-12bd08d66fe04a84be446e583d6663ac
Title: DANCING STORMTROOPER
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useControls } from "leva";
import { useEffect, useMemo, useRef } from "react";
import * as THREE from "three";
import { DissolveMaterial } from "./DissolveMaterial";

type ActionName = "mixamo.com";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Model() {
  const group = useRef<THREE.Group>(null!);
  const { nodes, materials, animations } = useGLTF(
    "/demo-2023-dissolve-shader/dancing_stormtrooper.glb"
  ) as any;

  const baseMat = useMemo(
    () => materials.Stormtroopermat.clone(),
    [materials.Stormtroopermat]
  );
  useEffect(() => () => baseMat.dispose(), [baseMat]);

  const { actions } = useAnimations(animations, group) as any as {
    actions: GLTFActions;
  };

  useEffect(() => {
    actions["mixamo.com"].setLoop(THREE.LoopRepeat, Infinity);
    actions["mixamo.com"].play();
  }, [actions]);

  const props = useControls({
    debug: {
      value: true,
    },
    mode: {
      options: ["translate", "rotate", "scale"],
      value: "translate",
    },
    feather: {
      value: 6,
      min: 0,
      max: 10,
      step: 0.1,
    },
    thickness: {
      value: 0.1,
      min: 0,
      max: 1,
      step: 0.01,
    },
    color: {
      value: "#eb5a13",
    },
    intensity: {
      value: 4.5,
      min: 1,
      max: 10,
      step: 0.1,
    },
  });

  return (
    <group ref={group} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="f8ce42897676455090b6ff376356f84cfbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="Object_4">
                  <primitive object={nodes._rootJoint} />
                  <skinnedMesh
                    castShadow
                    name="Object_7"
                    geometry={nodes.Object_7.geometry}
                    // material={materials.Stormtroopermat}
                    skeleton={nodes.Object_7.skeleton}
                    renderOrder={2}
                  >
                    <DissolveMaterial baseMaterial={baseMat} {...props} />
                  </skinnedMesh>
                  <group name="Object_6" />
                  <group name="Stormtrooper" />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}
